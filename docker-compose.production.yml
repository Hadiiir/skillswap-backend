version: '3.8'

services:
  db:
    image: postgres:15
    container_name: skillswap_db_prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - skillswap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: skillswap_redis_prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - skillswap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: skillswap_web_prod
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn skillswap.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
      "
    volumes:
      - static_volume_prod:/app/staticfiles
      - media_volume_prod:/app/media
      - ./logs:/app/logs
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - skillswap-network
    environment:
      - DJANGO_SETTINGS_MODULE=skillswap.settings_production
    env_file:
      - .env.production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: skillswap_nginx_prod
    volumes:
      - ./nginx.production.conf:/etc/nginx/conf.d/default.conf
      - static_volume_prod:/app/staticfiles
      - media_volume_prod:/app/media
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - skillswap-network
    restart: unless-stopped

  celery:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: skillswap_celery_prod
    command: celery -A skillswap worker --loglevel=info --concurrency=2
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - skillswap-network
    environment:
      - DJANGO_SETTINGS_MODULE=skillswap.settings_production
    env_file:
      - .env.production
    restart: unless-stopped

  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile.production
    container_name: skillswap_celery_beat_prod
    command: celery -A skillswap beat --loglevel=info
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - skillswap-network
    environment:
      - DJANGO_SETTINGS_MODULE=skillswap.settings_production
    env_file:
      - .env.production
    restart: unless-stopped

volumes:
  postgres_data_prod:
  static_volume_prod:
  media_volume_prod:

networks:
  skillswap-network:
    driver: bridge
