{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/hader/skillswap-backend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { authAPI } from \"../services/api\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.setToken(token);\n      fetchProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchProfile = async () => {\n    try {\n      const userData = await authAPI.getProfile();\n      setUser(userData);\n    } catch (error) {\n      console.error(\"Failed to fetch profile:\", error);\n      localStorage.removeItem(\"token\");\n      api.setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n\n      // Handle different response structures\n      let token, userData;\n      if (response.access) {\n        // JWT token response\n        token = response.access;\n        userData = response.user || (await authAPI.getProfile());\n      } else if (response.token) {\n        // Simple token response\n        token = response.token;\n        userData = response.user || (await authAPI.getProfile());\n      } else {\n        throw new Error(\"Invalid response format\");\n      }\n      localStorage.setItem(\"token\", token);\n      api.setToken(token);\n      setUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message || \"خطأ في تسجيل الدخول\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n\n      // Some APIs return user data immediately, others require login\n      if (response.access || response.token) {\n        const token = response.access || response.token;\n        localStorage.setItem(\"token\", token);\n        api.setToken(token);\n        const userProfile = response.user || (await authAPI.getProfile());\n        setUser(userProfile);\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Registration error:\", error);\n      let errorMessage = \"خطأ في إنشاء الحساب\";\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && _error$response2.data) {\n        const errorData = error.response.data;\n        if (errorData.email) {\n          errorMessage = errorData.email[0] || errorData.email;\n        } else if (errorData.detail) {\n          errorMessage = errorData.detail;\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors[0];\n        }\n      }\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    api.setToken(null);\n    setUser(null);\n  };\n  const updateProfile = async data => {\n    try {\n      const updatedUser = await authAPI.updateProfile(data);\n      setUser(updatedUser);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || error.message || \"خطأ في تحديث الملف الشخصي\"\n      };\n    }\n  };\n  const updateUser = async data => {\n    try {\n      const updatedUser = await authAPI.updateProfile(data);\n      setUser(updatedUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","authAPI","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","user","setUser","loading","setLoading","token","localStorage","getItem","setToken","fetchProfile","userData","getProfile","error","console","removeItem","login","credentials","response","access","Error","setItem","success","_error$response","_error$response$data","data","detail","message","register","userProfile","_error$response2","errorMessage","errorData","email","non_field_errors","logout","updateProfile","updatedUser","_error$response3","_error$response3$data","updateUser","value","isAuthenticated","Provider","fileName","lineNumber","columnNumber","_c","useAuth","context","$RefreshReg$"],"sources":["/home/hader/skillswap-backend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\nimport type { User, AuthContextType } from \"../types\"\nimport { authAPI } from \"../services/api\"\nimport api from \"../services/api\"\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      api.setToken(token)\n      fetchProfile()\n    } else {\n      setLoading(false)\n    }\n  }, [])\n\n  const fetchProfile = async () => {\n    try {\n      const userData = await authAPI.getProfile()\n      setUser(userData)\n    } catch (error) {\n      console.error(\"Failed to fetch profile:\", error)\n      localStorage.removeItem(\"token\")\n      api.setToken(null)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const login = async (credentials: { email: string; password: string }) => {\n    try {\n      const response = await authAPI.login(credentials)\n\n      // Handle different response structures\n      let token, userData\n      if (response.access) {\n        // JWT token response\n        token = response.access\n        userData = response.user || (await authAPI.getProfile())\n      } else if (response.token) {\n        // Simple token response\n        token = response.token\n        userData = response.user || (await authAPI.getProfile())\n      } else {\n        throw new Error(\"Invalid response format\")\n      }\n\n      localStorage.setItem(\"token\", token)\n      api.setToken(token)\n      setUser(userData)\n\n      return { success: true }\n    } catch (error: any) {\n      console.error(\"Login error:\", error)\n      return {\n        success: false,\n        error: error.response?.data?.detail || error.message || \"خطأ في تسجيل الدخول\",\n      }\n    }\n  }\n\n  const register = async (userData: {\n    first_name: string\n    last_name: string\n    email: string\n    password: string\n    phone?: string\n    bio?: string\n  }) => {\n    try {\n      const response = await authAPI.register(userData)\n\n      // Some APIs return user data immediately, others require login\n      if (response.access || response.token) {\n        const token = response.access || response.token\n        localStorage.setItem(\"token\", token)\n        api.setToken(token)\n\n        const userProfile = response.user || (await authAPI.getProfile())\n        setUser(userProfile)\n      }\n\n      return { success: true }\n    } catch (error: any) {\n      console.error(\"Registration error:\", error)\n      let errorMessage = \"خطأ في إنشاء الحساب\"\n\n      if (error.response?.data) {\n        const errorData = error.response.data\n        if (errorData.email) {\n          errorMessage = errorData.email[0] || errorData.email\n        } else if (errorData.detail) {\n          errorMessage = errorData.detail\n        } else if (errorData.non_field_errors) {\n          errorMessage = errorData.non_field_errors[0]\n        }\n      }\n\n      return { success: false, error: errorMessage }\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    api.setToken(null)\n    setUser(null)\n  }\n\n  const updateProfile = async (data: Partial<User>) => {\n    try {\n      const updatedUser = await authAPI.updateProfile(data)\n      setUser(updatedUser)\n      return { success: true }\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.detail || error.message || \"خطأ في تحديث الملف الشخصي\",\n      }\n    }\n  }\n\n  const updateUser = async (data: Partial<User>) => {\n    try {\n      const updatedUser = await authAPI.updateProfile(data)\n      setUser(updatedUser)\n    } catch (error: any) {\n      throw error\n    }\n  }\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    updateProfile,\n    updateUser,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}